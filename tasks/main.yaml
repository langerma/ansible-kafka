---

- name: Create kafka group
  group:
    name: '{{ kafka_group }}'
    state: present
  tags:
    - kafka_group

- name: Create kafka user
  user:
    name: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
    state: present
    createhome: no
  tags:
    - kafka_user

- name: Check if Kafka has already been downloaded and unpacked
  stat:
    path: '{{ kafka_dir }}_{{ kafka_scala_version }}-{{ kafka_version }}'
  register: dir

- name: Download Apache Kafka
  get_url:
    url: http://www-eu.apache.org/dist/kafka/{{ kafka_version }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    dest: /tmp
  when: not dir.stat.exists
  tags:
    - kafka_download

- name: Unpack Apache Kafka
  unarchive:
    src: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    dest: '{{ kafka_root_dir }}'
    copy: no
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  when: not dir.stat.exists
  tags:
    - kafka_unpack

- name: Create directory for kafka log files
  file:
    path: '{{ kafka_log_dir }}'
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_dir

- name: Create directory for kafka log files
  file:
    path: '{{ kafka_log_dirs }}'
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_dirs

- name: Create directory for kafka log files
  file:
    path: '{{ kafka_dir }}/config'
    state: directory
    group: '{{ kafka_group }}'
    owner: '{{ kafka_user }}'
  tags:
    - kafka_dirs

- name: Template configuration file to server.properties
  template:
    src: server.properties.j2
    dest: '{{ kafka_dir }}/config/server.properties'
  notify:
    - Restart kafka service
  tags:
    - kafka_config

- name: Template configuration file to zookeeper.properties
  template:
    src: zookeeper.properties.j2
    dest: '{{ kafka_dir }}/config/zookeeper.properties'
  tags:
    - kafka_config

- name: Template configuration file to connect-standalone.properties
  template:
    src: connect-standalone.properties.j2
    dest: '{{ kafka_dir }}/config/connect-standalone.properties'
  tags:
    - kafka_config

- name: Template configuration file to connect-distributed.properties
  template:
    src: connect-distributed.properties.j2
    dest: '{{ kafka_dir }}/config/connect-distributed.properties'
  tags:
    - kafka_config

- name: Template configuration file to producer.properties
  template:
    src: producer.properties.j2
    dest: '{{ kafka_dir }}/config/producer.properties'
  tags:
    - kafka_config

- name: Template configuration file to consumer.properties
  template:
    src: consumer.properties.j2
    dest: '{{ kafka_dir }}/config/consumer.properties'
  tags:
    - kafka_config

- name: Template Kafka supervisord service file
  template:
    src: kafka.ini.j2
    dest: "{{ supervisord_ini_dir }}/kafka.ini"
    mode: 0755
  notify:
    - update supervisord
    - Restart kafka service
  tags:
    - kafka_service

- name: "update supervisord"
  shell: "supervisorctl update"
  
- name: Start kafka service
  supervisorctl: 
    name: kafka
    state: started
  tags:
    - kafka_service

- name: Delete the kafka archive file
  file:
    path: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    state: absent
  tags:
    - kafka_cleanup
